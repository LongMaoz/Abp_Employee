syntax = "proto3";

package equipment.controller;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

service EquipmentController {
    rpc findByIds (GetByIds) returns (EquipmentList) {}
    rpc findAll (FindAllRequest) returns (EquipmentList) {}
    rpc checkOut (CheckOutRequest) returns (CheckOutResult) {}
    rpc checkIn (CheckInRequest) returns (CheckInResult) {}
    rpc rollback (RollbackRequest) returns (RollbackResult) {}
    rpc checkExistsEquipment (CheckExistsEquipment) returns (CheckExistsEquipmentResult) {}
    rpc countEquipment (CountEquipment) returns (CountEquipmentResult) {}
    rpc multiCountEquipment (MultiCountEquipment) returns (MultiCountEquipmentResult) {}
    rpc statsAvailableEquipment (StatsAvailableEquipmentRequest) returns (StatsAvailableEquipmentResult) {}
    rpc chooseEquipment (ChooseEquipmentRequest) returns (ChooseEquipmentResult) {}
    rpc renewEquipment (RenewEquipmentRequest) returns (RenewEquipmentResult) {}
    rpc checkEquipmentCalendarLimit (CheckEquipmentCalendarLimitRequest) returns (CheckEquipmentCalendarLimitResult) {}
    rpc checkEquipmentReplace (CheckEquipmentReplaceRequest) returns (CheckEquipmentReplaceResult) {}
    rpc checkEquipmentCalendarExists (CheckEquipmentCalendarExistsRequest) returns (CheckExistsEquipmentResult) {}
    rpc checkUpdateDeliveryTime (CheckUpdateDeliveryTimeRequest) returns (CheckUpdateBizTimeResult) {}
    rpc checkUpdateReceiveTime (CheckUpdateReceiveTimeRequest) returns (CheckUpdateBizTimeResult) {}
    rpc checkUpdateBizTime (CheckUpdateBizTimeRequest) returns (CheckUpdateBizTimeResult) {}
    rpc findOrderByEquipment (FindOrderByEquipmentRequest) returns (FindOrderByEquipmentResult) {}
    rpc createEquipmentCalendar(CreateEquipmentCalendarRequest) returns (CreateEquipmentCalendarResult) {}
    rpc deleteEquipmentCalendar(DeleteEquipmentCalendarRequest) returns (DeleteEquipmentCalendarResult) {}
}

service FreezeController {
    rpc freezeByIds (FreezeByIds) returns (google.protobuf.BoolValue) {}
    rpc unfreezeByIds (UnfreezeByIds) returns (google.protobuf.BoolValue) {}
}

service EliminateController {
    rpc eliminateByIds (EliminateByIds) returns (google.protobuf.BoolValue) {}
}

service ScrapController {
    rpc scrapByIds (ScrapByIds) returns (google.protobuf.BoolValue) {}
}

message GetByIds {
    string ids = 1;
    bool needMaintain = 2; // 是否需要返回维修,默认不返回
}

message FindAllRequest {
    repeated int32 ids = 1; // id数组
    string uniqueCode = 2; // 唯一码
    int32 productId = 3; // 型号id
    int32 warehouseId = 4; // 仓库id
    repeated string statusArr = 5; // 状态数组 ENUM('UNSALE','IDLE','RENTING','MAINTAINING','ELIMINATED','SCRAP')
    repeated string ownershipArr = 6; // 归属数组 ENUM('OWN', 'TRUSTEESHIP', 'BORROW', 'PARTNERSHIP', 'TRIAL', 'SECONDHAND')
}

message CheckExistsEquipment {
    int32 warehouseId = 1;
}

message CountEquipment {
    int32 productId = 1;
    repeated string status = 2;
}

message MultiCountEquipment {
    repeated int32 productIds = 1;
    repeated string status = 2;
    repeated string ownerships = 3;
}

message EquipmentList {
    repeated Equipment list = 1;
}

message Freeze {
    int32 id = 1;
    int32 equipmentId = 2;
    string reason = 3;
    int32 operatorId = 4;
    string operatorName = 5;
    string createTime = 6;
    string updateTime = 7;
    string deleteTime = 8;
}

message Equipment {
    int32 id = 1;
    int32 productId = 2;
    int32 warehouseId = 3;
    string productName = 4;
    string ownerId = 5;
    string ownerName = 6;
    string ownerPhone = 7;
    string ownership = 8;
    string serialNo = 9;
    string uniqueCode = 10;
    int32 operatorId = 11;
    string operatorName = 12;
    string createTime = 13;
    string updateTime = 14;
    string deleteTime = 15;
    int32 isFreeze = 16;
    Freeze freeze = 17;
    string status = 18;
    repeated Maintain maintains = 19; // 维修列表
    int32 isForceUnsale = 20; // 是否强制下架 1是 0否
}

message CheckedEquipment {
    int32 id = 1;
    string updateTime = 2;
    int32 operatorId = 3;
    string operatorName = 4;
    google.protobuf.Int32Value warehouseId = 5;
    google.protobuf.StringValue warehouseName = 6;
    google.protobuf.StringValue orderId = 7;
    google.protobuf.StringValue checkOutOrderId = 8;
    google.protobuf.StringValue checkInOrderId = 9;
}

message CheckOutRequest {
    repeated CheckedEquipment equipments = 1;
    string purpose = 2;
}

message CheckOutResult {
    bool success = 1;
}

message CheckInRequest {
    repeated CheckedEquipment equipments = 1;
    string purpose = 2;
}

message CheckInResult {
    bool success = 1;
}

message RollbackRequest {
    repeated CheckedEquipment equipments = 1;
    string purpose = 2;
}

message RollbackResult {
    bool success = 1;
}

message CheckExistsEquipmentResult {
    bool exists = 1;
}

message CountEquipmentResult {
    int32 count = 1;
}

message ProductEquipmentCount {
    int32 productId = 1;
    int32 count = 2;
}

message MultiCountEquipmentResult {
    repeated ProductEquipmentCount list = 1;
}

message StatsAvailableEquipmentRequest {
    repeated int32 productIds = 1; // 型号id数组
    string customerReceivedTime = 2; // 客户收到时间（格式YYYY-MM-DD）
    string customerSentTime = 3; // 客户寄出时间（格式YYYY-MM-DD）
    string deliveryWay = 4; // 配送方式 （顺丰-SFExpress,自取-FromStore）
    google.protobuf.StringValue province = 5; // 收货省
    google.protobuf.StringValue city = 6; // 收货市
    google.protobuf.Int32Value warehouseId = 7; // 仓库id
}

message StatsAvailableEquipmentRecord {
    int32 productId = 1; // 型号id
    int32 availableCount = 2; // 可用数量
    int32 totalCount = 3; // 总数量
}

message StatsAvailableEquipmentResult {
    repeated StatsAvailableEquipmentRecord records = 1;
}

message ChooseEquipmentRecord {
    int32 id = 1; // 器材id
    int32 productId = 2; // 型号id
    int32 warehouseId = 3; // 仓库id
    string uniqueCode = 4; // 唯一码
    string serialNo = 5; // 序列号
    string deliveryTime = 6; // 平台发货时间
    string customerReceivedTime = 7; // 客户收到时间
    string customerSentTime = 8; // 客户寄出时间
    string receivedTime = 9; // 平台收到时间
}

message ChooseEquipmentRequest {
    int32 productId = 1; // 型号id
    string customerReceivedTime = 2; // 客户收到时间（格式YYYY-MM-DD）
    string customerSentTime = 3; // 客户寄出时间（格式YYYY-MM-DD）
    string deliveryWay = 4; // 配送方式 （顺丰-SFExpress,自取-FromStore）
    string province = 5; // 配送省份
    string city = 6; // 配送城市
    int32 warehouseId = 7; // 自取仓库
    int64 userId = 8; // 用户id
    bool isScan = 9; // 是否到店扫码下单
}

message ChooseEquipmentResult {
    ChooseEquipmentRecord equipment = 1; // 器材信息
    string message = 2; // 错误信息
}

message RenewDetail {
    int32 productId = 1; // 型号id
    int32 equipmentId = 2; // 器材id
    int32 warehouseId = 3; // 仓库id
    string newReceiveTime = 4; // 新的平台预收时间
    int32 newRentDays = 5; // 新的租赁天数(原租期+续租租期)
}

message RenewEquipmentRequest {
    string orderId = 1; // 订单id
    string deliverWay = 2; // 配送方式（顺丰-SFExpress,自取-FromStore）
    string province = 3; // 收货省(一级区域)
    repeated RenewDetail details = 4; // 器材列表
    string origin = 5; // 租赁-RENTAL 众测-TRIAL 取回自用-KEEPER
}

message RenewEquipmentResultItem {
    bool allow = 1; // 是否允许续租
    int32 equipmentId = 2; // 器材id
    int32 productId = 3; // 型号id
    string productName = 4; // 型号名称
    string reason = 5; // 失败原因
    int32 discount = 6; // 型号是否参与优惠 0-否 1-是
}

message RenewEquipmentResult {
    bool allow = 1; // 是否允许续租
    repeated RenewEquipmentResultItem list = 2; // 续租校验详情列表
}

message CheckEquipmentCalendarLimitRequest {
    int32 equipmentId = 1; // 器材id
    string bizType = 2; // 业务类型（RENTAL-租赁,TRIAL-众测,TRANSFER-调仓）
    google.protobuf.Int64Value bizId = 3; // 业务id
    string deliveryTime = 4; // 平台发货时间
    string receiveTime = 5; // 平台预收时间
    string deliveryWay = 6; // 配送方式 （顺丰-SFExpress,自取-FromStore）
    google.protobuf.StringValue province = 7; // 收货省
    google.protobuf.StringValue city = 8; // 收货市
    google.protobuf.Int32Value warehouseId = 9; // 仓库id
    google.protobuf.Int32Value rentDays = 10; // 租赁天数
}

message CheckEquipmentCalendarLimitResult {
    bool allow = 1; // 是否允许下单
    string reason = 2; // 失败原因
    Equipment equipment = 3; // 器材信息
}

message CheckEquipmentReplaceRequest {
    string orderId = 1; // 订单id
    string changeOrderId = 2; // 更换订单id
    string deliverWay = 3; // 配送方式（顺丰-SFExpress,自取-FromStore）
    int32 preEquipmentId = 4; // 旧器材id
    int32 postEquipmentId = 5; // 新器材id
    string postDeliveryTime = 6; // 新器材平台发货时间
    string postReceiveTime = 7; // 新器材平台预收时间
    string purpose = 8; // 出库原因 MAINTAIN维修 OFFSHELVES下架 TRAIL众测 RENTAL租赁 TRANSFER调货 TRIAL众测
}

message CheckEquipmentReplaceResult {
    bool allow = 1; // 是否允许更换
    string reason = 2; // 失败原因
}

message CheckEquipmentCalendarExistsRequest {
    int32 equipmentId = 1; // 器材id
    string startTime = 2; // 开始时间（格式YYYY-MM-DD）
    string endTime = 3; // 结束时间（格式YYYY-MM-DD）
}

message Maintain {
    int32 id = 1; // 维修id
    int32 equipmentId = 2; // 器材id
    string status = 3; // 维修状态 PENDING-待确认, CONFIRMED-已确认, ABNORMAL-档期异常, MAINTAINING-维修中, TIMEOUT-已超时, CLOSED-已关闭, FINISHED-已完成
    int32 ticketId = 4; // 器材id
    string orderId = 5; // 订单id
    string way = 6; // 维修方式 OFFICIAL-官方, THIRD-第三方
    double price = 7; // 维修费用
    string createTime = 8; // 创建时间
    string updateTime = 9; // 更新时间
    string deleteTime = 10; // 删除时间
    int32 operatorId = 11; // 操作人id
    string operatorName = 12; // 操作人名称
    int32 creatorId = 13; // 创建人id
    string creatorName = 14; // 创建人名称
    string expectFinishTime = 15; // 预计完成
    string maintainNo = 16; // 维修案例号
    string closeReason = 17; // 关闭原因
    string delayReason = 18; // 延期原因
    string outboundOrderId = 19; // 出库单号
    string inboundOrderId = 20; // 入库单号
    string outboundWay = 21; // 出库方式 SFExpress, FromStore
    string expectOutboundTime = 22; // 预计出库时间
    string maintainAddressId = 23; // 维修地址id
    string addressName = 24; // 地址名称
    string addressLinkman = 25; // 地址联系人
    string addressPhone = 26; // 地址联系方式
    string addressProvince = 27; // 地址省
    string addressCity = 28; // 地址市
    string addressDistrict = 29; // 地址区
    string addressStreet = 30; // 详细地址
}

message CheckUpdateBizTimeResult {
    bool allow = 1; // 是否允许
    string reason = 2; // 失败原因
}

message CheckUpdateDeliveryTimeRequest {
    repeated int32 equipmentIds = 1; // 器材id数组
    string orderId = 2;    // 订单id
    string province = 3; // 收货省(发货方式是顺丰必填)
    string newDeliveryTime = 4; // 新发货时间
    string customerReceiveTime = 5; // 客户预收时间
    string deliverWay = 6; // 配送方式（顺丰-SFExpress,自取-FromStore）
}

message CheckUpdateReceiveTimeRequest {
    repeated int32 equipmentIds = 1; // 器材id数组
    string province = 2; // 收货省(发货方式是顺丰必填)
    string newReceiveTime = 3; // (新)平台收货时间
    string lastReceiveTime = 4; // (旧)最晚平台预收时间
    string deliverWay = 5; // 配送方式（顺丰-SFExpress,自取-FromStore）
}

message CheckUpdateBizTimeRequest {
    repeated int32 equipmentIds = 1; // 器材id数组
    string bizType = 2; // 业务类型（RENTAL-租赁,TRIAL-众测,TRANSFER-调仓）
    google.protobuf.Int64Value bizId = 3; // 业务id
    string newStartTime = 4; // 更新后的占档开始时间
    string newEndTime = 5; // 更新后的占档结束时间
    google.protobuf.StringValue deliverWay = 6; // 配送方式（顺丰-SFExpress,自取-FromStore）
    google.protobuf.StringValue province = 7; // 收货省(发货方式是顺丰必填)
    google.protobuf.StringValue city = 8; // 收货市(发货方式是顺丰必填)
    google.protobuf.Int32Value warehouseId = 9; // 仓库id(发货方式是自取必填)
}

message FindOrderByEquipmentRequest {
    int32 equipmentId = 1; // 器材id
    string startTime = 2; // 开始时间（格式YYYY-MM-DD）
    string endTime = 3; // 结束时间（格式YYYY-MM-DD）
}

message FindOrderByEquipmentResult {
    repeated string orderIds = 1; // 订单id数组
}

message CreateEquipmentCalendarRequest {
    repeated int32 equipmentIds = 1; // 器材id数组
    string bizType = 2; // 业务类型（RENTAL-租赁,TRIAL-众测,TRANSFER-调仓）
    google.protobuf.Int64Value bizId = 3; // 业务id
    string startTime = 4; // 开始时间（格式YYYY-MM-DD）
    string endTime = 5; // 结束时间（格式YYYY-MM-DD）
}

message CreateEquipmentCalendarResult {
    bool success = 1; // 是否成功
    string reason = 2; // 失败原因
}

message DeleteEquipmentCalendarRequest {
    repeated int32 equipmentIds = 1; // 器材id数组
    string startTime = 2; // 开始时间（格式YYYY-MM-DD）
    string endTime = 3; // 结束时间（格式YYYY-MM-DD）
}

message DeleteEquipmentCalendarResult {
    bool success = 1; // 是否成功
    string reason = 2; // 失败原因
}

message FreezeByIds {
    repeated int32 equipmentIds = 1; // 器材id
    string reason = 2; // 冻结原因
}

message UnfreezeByIds {
    repeated int32 equipmentIds = 1; // 器材id
    google.protobuf.StringValue unfreezeTime = 2; // 定时解冻（可为空）
}

message EliminateByIds {
    repeated int32 equipmentIds = 1; // 器材id
    int32 way = 2; // 淘汰方式
    string reason = 3; // 淘汰原因
    google.protobuf.StringValue remark = 4; // 备注（可为空）
}

message ScrapByIds {
    repeated int32 equipmentIds = 1; // 器材id
    string reason = 2; // 废弃原因
    google.protobuf.StringValue remark = 3; // 备注（可为空）
}
