syntax = "proto3";

package wallet;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

message CreateIncomeRequest {
    string createTime = 1;
    string updateTime = 2;
    string userId = 3;
    string category = 4;
    string title = 5;
    string description = 6;
    double amount = 7;
    map<string, string> extra = 8;
    string evidence = 9;
    string remark = 10;
}

message CreateOutcomeRequest {
    string createTime = 1;
    string updateTime = 2;
    string userId = 3;
    string category = 4;
    string title = 5;
    string description = 6;
    double amount = 7;
    map<string, string> extra = 8;
    string evidence = 9;
    string remark = 10;
}

message Billing {
    int64 id = 1;
    string createTime = 2;
    string updateTime = 3;
    string completedTime = 4;
    string closedTime = 5;
    int64 userId = 6;
    string userPhoneNumber = 7;
    string userName = 8;
    string userCertNo = 9;
    string userCertName = 10;
    string type = 11;
    string category = 12;
    string title = 13;
    string description = 14;
    double amount = 15;
    map<string, string> extra = 16;
    string status = 17;
    string channel = 18;
    string evidence = 19;
    string remark = 20;
}

message BillingById {
    int64 id = 1;
}

message BillingByIds {
    repeated int64 ids = 1;
}

message ListBillingsRequest {
    int32 skip = 1;
    int32 limit = 2;
}

message SearchBillingsRequest {
    int64 userId = 1;
    string type = 2;
    string status = 3;
    string keywords = 4;
    int32 skip = 5;
    int32 limit = 6;
}

message BillingsResult {
    int32 total = 1;
    repeated Billing items = 2;
}

service BillingsService {
    rpc CreateIncome (CreateIncomeRequest) returns (Billing) {}
    rpc CreateOutcome (CreateOutcomeRequest) returns (Billing) {}
    rpc GetBillingById (BillingById) returns (Billing) {}
    rpc GetBillingsByIds (BillingByIds) returns (BillingsResult) {}
    rpc ListBillings (ListBillingsRequest) returns (BillingsResult) {}
    rpc SearchBillings (SearchBillingsRequest) returns (BillingsResult) {}
}

message DailyIncome {
    int32 id = 1;
    string createTime = 2;
    string updateTime = 3;
    int64 userId = 4;
    int32 qty = 5;
    double amount = 6;
    int32 rank = 7;
    string remark = 8;
}

message SearchDailyIncomesRequest {
    repeated string createTime = 1;
    int64 userId = 2;
    repeated int32 qty = 3;
    repeated double amount = 4;
    string keywords = 5;
    int32 skip = 6;
    int32 limit = 7;
}

message DailyIncomesResult {
    int32 total = 1;
    repeated DailyIncome items = 2;
}

service DailyIncomesService {
    rpc SearchDailyIncomes (SearchDailyIncomesRequest) returns (DailyIncomesResult) {}
}